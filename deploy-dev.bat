@echo off
setlocal enabledelayedexpansion

REM Simple Development Deployment for Workflow-Use Suite
REM One-time setup that creates a start.bat for future launches

echo.
echo ==========================================
echo   Workflow-Use Dev Deployment Setup
echo ==========================================
echo.

REM Color definitions
set "GREEN=[92m"
set "YELLOW=[93m"
set "RED=[91m"
set "CYAN=[96m"
set "BOLD=[1m"
set "RESET=[0m"

REM Function definitions
goto :main

:print_success
echo %GREEN%✅ %~1%RESET%
goto :eof

:print_warning
echo %YELLOW%⚠️ %~1%RESET%
goto :eof

:print_error
echo %RED%❌ %~1%RESET%
goto :eof

:print_info
echo %CYAN%🔍 %~1%RESET%
goto :eof

:main

REM Check if we're in the right directory
if not exist "pyproject.toml" (
    call :print_error "pyproject.toml not found. Please run from project root."
    pause
    exit /b 1
)

call :print_info "Setting up development environment..."

REM Quick prerequisite check
python --version >nul 2>&1
if errorlevel 1 (
    call :print_error "Python not found. Please install Python 3.11+"
    pause
    exit /b 1
)

REM Check/install uv
uv --version >nul 2>&1
if errorlevel 1 (
    call :print_warning "Installing uv..."
    python -m pip install uv
    if errorlevel 1 (
        call :print_error "Failed to install uv"
        pause
        exit /b 1
    )
)

call :print_success "Prerequisites OK"

REM Setup virtual environment
call :print_info "Setting up virtual environment..."
if not exist ".venv" (
    uv venv
    if errorlevel 1 (
        call :print_error "Failed to create virtual environment"
        pause
        exit /b 1
    )
    call :print_success "Virtual environment created"
) else (
    call :print_success "Virtual environment exists"
)

REM Install dependencies
call :print_info "Installing dependencies..."
uv sync
if errorlevel 1 (
    call :print_error "Failed to install dependencies"
    pause
    exit /b 1
)
call :print_success "Dependencies installed"

REM Install Playwright browsers
call :print_info "Installing browsers..."
uv run playwright install --with-deps >nul 2>&1
if errorlevel 1 (
    call :print_warning "Playwright installation had issues, continuing..."
) else (
    call :print_success "Browsers installed"
)

REM Setup environment files
call :print_info "Setting up configuration..."
if not exist "workflows\.env" (
    if exist "workflows\.env.example" (
        copy "workflows\.env.example" "workflows\.env" >nul
        call :print_success "Created workflows\.env"
        call :print_warning "Please edit workflows\.env to add your API keys"
    )
)

REM Create start.bat for future launches
call :print_info "Creating start.bat for future launches..."
(
echo @echo off
echo setlocal
echo.
echo REM Quick Start Script for Workflow-Use Suite
echo REM Generated by deploy-dev.bat
echo.
echo echo.
echo echo ==========================================
echo echo   Starting Workflow-Use Suite
echo echo ==========================================
echo echo.
echo.
echo REM Check if virtual environment exists
echo if not exist ".venv" ^(
echo     echo ❌ Virtual environment not found. Please run deploy-dev.bat first.
echo     pause
echo     exit /b 1
echo ^)
echo.
echo REM Check if dependencies are installed
echo if not exist ".venv\Lib\site-packages\fastapi" ^(
echo     echo ⚠️ Dependencies not found. Installing...
echo     uv sync
echo ^)
echo.
echo echo 🚀 Starting Workflow-Use Suite...
echo echo.
echo echo Services will be available at:
echo echo   📡 Backend API: http://127.0.0.1:8000
echo echo   🌐 Browser Web-UI: http://127.0.0.1:7788
echo echo   ⚛️ Workflow UI: http://127.0.0.1:5173
echo echo.
echo echo Press Ctrl+C to stop all services
echo echo.
echo.
echo REM Start the complete suite
echo uv run python main.py suite
echo.
echo echo.
echo echo 🛑 Services stopped.
echo pause
) > start.bat

call :print_success "start.bat created"

REM Create quick launcher shortcuts
call :print_info "Creating additional launchers..."

REM Backend only launcher
(
echo @echo off
echo echo 🔧 Starting Backend Only...
echo uv run python main.py backend
echo pause
) > start-backend.bat

REM Web-UI only launcher
(
echo @echo off
echo echo 🌐 Starting Web-UI Only...
echo uv run python main.py webui
echo pause
) > start-webui.bat

call :print_success "Additional launchers created"

echo.
call :print_success "🎉 Development setup complete!"
echo.
echo %CYAN%📋 What was created:%RESET%
echo   - .venv/ (virtual environment)
echo   - start.bat (main launcher)
echo   - start-backend.bat (backend only)
echo   - start-webui.bat (web-ui only)
echo.
echo %YELLOW%💡 Next steps:%RESET%
echo   1. Edit workflows\.env to add your API keys
echo   2. Run start.bat to launch the suite
echo.
echo %GREEN%🚀 Quick launch commands:%RESET%
echo   - start.bat (complete suite)
echo   - start-backend.bat (backend only)
echo   - start-webui.bat (web-ui only)
echo.

REM Ask if user wants to start now
set /p launch_now="Would you like to start the suite now? (y/N): "
if /i "%launch_now%"=="y" (
    echo.
    call :print_info "Launching Workflow-Use Suite..."
    call start.bat
) else (
    echo.
    call :print_info "Setup complete. Run start.bat when ready!"
)

echo.
pause

